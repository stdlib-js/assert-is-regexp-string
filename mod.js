// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return t({},"x",{}),!0}catch(t){return!1}},e=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,l=n.__lookupGetter__,u=n.__lookupSetter__;var c=e,f=function(t,r,e){var c,f,p,y;if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((f="value"in e)&&(l.call(t,r)||u.call(t,r)?(c=t.__proto__,t.__proto__=n,delete t[r],t[r]=e.value,t.__proto__=c):t[r]=e.value),p="get"in e,y="set"in e,f&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&a&&a.call(t,r,e.get),y&&i&&i.call(t,r,e.set),t},p=r()?c:f;var y=function(t,r,e){p(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})};var v=function(t){return"string"==typeof t};var b=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var _=function(){return b&&"symbol"==typeof Symbol.toStringTag},s=Object.prototype.toString,g=s;var m=function(t){return g.call(t)},d=Object.prototype.hasOwnProperty;var j=function(t,r){return null!=t&&d.call(t,r)},S="function"==typeof Symbol?Symbol.toStringTag:"",w=j,O=S,P=s;var h=m,E=function(t){var r,e,n;if(null==t)return P.call(t);e=t[O],r=w(t,O);try{t[O]=void 0}catch(r){return P.call(t)}return n=P.call(t),r?t[O]=e:delete t[O],n},G=_()?E:h,T=String.prototype.valueOf;var k=G,x=function(t){try{return T.call(t),!0}catch(t){return!1}},A=_();var R=function(t){return"object"==typeof t&&(t instanceof String||(A?x(t):"[object String]"===k(t)))},V=v,X=R;var C=y,F=function(t){return V(t)||X(t)},$=R;C(F,"isPrimitive",v),C(F,"isObject",$);var q=F;var z=function(){return/^\/((?:\\\/|[^\/])+)\/([imgy]*)$/},B=z;y(B,"REGEXP",z());var D=q.isPrimitive,H=B.REGEXP;var I=function(t){return D(t)&&H.test(t)};export{I as default};
//# sourceMappingURL=mod.js.map
